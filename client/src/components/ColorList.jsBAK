// Make a put request to save your updated color
// think about where will you get the id from...
// where is id saved right now?

import React, { useState } from 'react';
import { axiosWithAuth } from '../util/axiosWithAuth';

const initialColor = {
	color: 'red',
	code: { hex: '#FF0000' },
};

const ColorList = ({ colors, updateColors }) => {
	const [editing, setEditing] = useState(false);
	const [colorToEdit, setColorToEdit] = useState(initialColor);
	const [hexCodeToEdit, setHexCodeToEdit] = useState(initialColor);

	const editColor = (color) => {
		// console.log(color);
		setEditing(true);
	};

	const deleteColor = (color) => {
		// make a delete request to delete this color
		axiosWithAuth()
			.delete(`/colors/${color.id}`)
			.then((res) => console.log(res))
			// .then((res) => console.log(res))
			.catch((err) => console.log(err.response));
	};

	const saveEdit = (colors) => {
		console.log('Saved!');
		// event.preventDefault();

		// const updatedColor = {
		// 	{colors.color: colorToEdit, code: hexCodeToEdit}
		// };

		axiosWithAuth()
			.put(`/colors/${colors.id}`, { colorToEdit, hexCodeToEdit })
			// .then((res) => updateColors(res.data))
			.then((res) => updateColors(res.data))
			.catch((err) => console.log(err.response));
	};

	return (
		<div className="colors-wrap">
			<p>colors</p>
			<ul>
				{colors &&
					colors.map((color) => {
						return (
							<li key={color.id} onClick={() => editColor(color)}>
								<span>
									<span
										className="delete"
										onClick={(event) => {
											event.stopPropagation();
											deleteColor(color);
										}}
									>
										x
									</span>{' '}
									{color.color}
								</span>
								<div
									className="color-box"
									style={{ backgroundColor: color.code.hex }}
								/>
							</li>
						);
					})}
			</ul>
			{editing && (
				<form onSubmit={saveEdit}>
					<legend>edit color</legend>
					<label>
						Color Name:
						<input
							type="text"
							onChange={(event) => setColorToEdit(event.target.value)}
						/>
					</label>
					<label>
						Hex Code:
						<input
							type="text"
							onChange={(event) => setHexCodeToEdit(event.target.value)}
						/>
					</label>
					<div className="button-row">
						<button>Save Changes</button>
						<button onClick={() => setEditing(false)}>Cancel</button>
					</div>
				</form>
			)}
			<div className="spacer" />
			{/* stretch - build another form here to add a color */}
		</div>
	);
};

export default ColorList;
